class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans;
        int s = 0;
        int e = nums.size()-1;
        int last = -1;
        
        // Last Position of element:
        while(s <= e) {
            int mid = s+(e-s)/2;
            if(nums[mid] == target) {
                last = mid;
                s = mid+1;
            } else if(nums[mid] < target) {
                s = mid + 1;
            } else {
                e = mid - 1;
            }

        }
        int l = 0;
        int r = nums.size()-1;
        int first = -1;
        // First Position of element:
        while(l <= r) {
            int m = l+(r-l)/2;
            if(nums[m] == target) {
                first = m;
                r = m-1;
            } else if(nums[m] < target) {
                l = m + 1;
            } else {
                r = m - 1;
            }

        }
        ans.push_back(first);
        ans.push_back(last);
        return ans;

    }
};
