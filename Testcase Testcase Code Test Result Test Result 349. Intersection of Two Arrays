class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
         vector<int> ans;
        //  sort(nums1.begin(), nums1.end());
        //  sort(nums2.begin(), nums2.end());
        //  int i = 0,j = 0;
        //  while(i < nums1.size() && j < nums2.size()) {
        //      if(nums1[i] == nums2[j]) {
        //         if(ans.empty() || ans.back() != nums1[i]) {
        //             ans.push_back(nums1[i]);
                   
        //      }      i++;
        //             j++;
        //      }
        //       else if(nums1[i] > nums2[j]) {
        //          j++;
        //      } else {
        //          i++;
        //      }
        //  }

        unordered_map<int, int>mpp;
        for(int i=0; i<nums1.size(); i++) {
            mpp[nums1[i]]++;
        }
        for(int num : nums2) {
            if(mpp.find(num) != mpp.end()) {
                ans.push_back(num);
                mpp.erase(num);
            }
        }
         return ans;
    }
};
